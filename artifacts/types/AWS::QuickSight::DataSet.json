{
  "arn": "arn:aws:cloudformation:us-west-2::type/resource/AWS-QuickSight-DataSet",
  "type": "AWS::QuickSight::DataSet",
  "time": "2024-11-07T18:31:22.795Z",
  "schema": {
    "additionalProperties": false,
    "createOnlyProperties": [
      "/properties/AwsAccountId",
      "/properties/DataSetId"
    ],
    "definitions": {
      "CalculatedColumn": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA calculated column for a dataset.\u003c/p\u003e",
        "properties": {
          "ColumnId": {
            "description": "\u003cp\u003eA unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "ColumnName": {
            "description": "\u003cp\u003eColumn name.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "Expression": {
            "description": "\u003cp\u003eAn expression that defines the calculated column.\u003c/p\u003e",
            "maxLength": 250000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "ColumnId",
          "ColumnName",
          "Expression"
        ],
        "type": "object"
      },
      "CastColumnTypeOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that casts a column to a different type.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eColumn name.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "Format": {
            "description": "\u003cp\u003eWhen casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.\u003c/p\u003e",
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "NewColumnType": {
            "$ref": "#/definitions/ColumnDataType"
          },
          "SubType": {
            "$ref": "#/definitions/ColumnDataSubType"
          }
        },
        "required": [
          "ColumnName",
          "NewColumnType"
        ],
        "type": "object"
      },
      "ColumnDataSubType": {
        "enum": [
          "FLOAT",
          "FIXED"
        ],
        "type": "string"
      },
      "ColumnDataType": {
        "enum": [
          "STRING",
          "INTEGER",
          "DECIMAL",
          "DATETIME"
        ],
        "type": "string"
      },
      "ColumnDescription": {
        "additionalProperties": false,
        "description": "\u003cp\u003eMetadata that contains a description for a column.\u003c/p\u003e",
        "properties": {
          "Text": {
            "description": "\u003cp\u003eThe text of a description for a column.\u003c/p\u003e",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ColumnGroup": {
        "additionalProperties": false,
        "description": "\u003cp\u003eGroupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.\u003c/p\u003e",
        "properties": {
          "GeoSpatialColumnGroup": {
            "$ref": "#/definitions/GeoSpatialColumnGroup"
          }
        },
        "type": "object"
      },
      "ColumnLevelPermissionRule": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA rule defined to grant access on one or more restricted columns.\n            Each dataset can have multiple rules.\n            To create a restricted column, you add it to one or more rules.\n            Each rule must contain at least one column and at least one user or group.\n            To be able to see a restricted column, a user or group needs to be added\n            to a rule for that column.\u003c/p\u003e",
        "properties": {
          "ColumnNames": {
            "description": "\u003cp\u003eAn array of column names.\u003c/p\u003e",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "Principals": {
            "description": "\u003cp\u003eAn array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.\u003c/p\u003e",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ColumnTag": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA tag for a column in a\n            \u003ccode\u003e\n               \u003ca href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html\"\u003eTagColumnOperation\u003c/a\u003e\n            \u003c/code\u003e\n            structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.\u003c/p\u003e",
        "properties": {
          "ColumnDescription": {
            "$ref": "#/definitions/ColumnDescription"
          },
          "ColumnGeographicRole": {
            "$ref": "#/definitions/GeoSpatialDataRole"
          }
        },
        "type": "object"
      },
      "ColumnTagName": {
        "enum": [
          "COLUMN_GEOGRAPHIC_ROLE",
          "COLUMN_DESCRIPTION"
        ],
        "type": "string"
      },
      "CreateColumnsOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.\u003c/p\u003e",
        "properties": {
          "Columns": {
            "description": "\u003cp\u003eCalculated columns to create.\u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/CalculatedColumn"
            },
            "maxItems": 128,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "Columns"
        ],
        "type": "object"
      },
      "CustomSql": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA physical table type built from the results of the custom SQL query.\u003c/p\u003e",
        "properties": {
          "Columns": {
            "description": "\u003cp\u003eThe column schema from the SQL query result set.\u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/InputColumn"
            },
            "maxItems": 2048,
            "minItems": 1,
            "type": "array"
          },
          "DataSourceArn": {
            "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the data source.\u003c/p\u003e",
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eA display name for the SQL query result.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "SqlQuery": {
            "description": "\u003cp\u003eThe SQL query.\u003c/p\u003e",
            "maxLength": 168000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "DataSourceArn",
          "Name",
          "SqlQuery"
        ],
        "type": "object"
      },
      "DataSetImportMode": {
        "enum": [
          "SPICE",
          "DIRECT_QUERY"
        ],
        "type": "string"
      },
      "DataSetRefreshProperties": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe refresh properties of a dataset.\u003c/p\u003e",
        "properties": {
          "RefreshConfiguration": {
            "$ref": "#/definitions/RefreshConfiguration"
          }
        },
        "type": "object"
      },
      "DataSetUsageConfiguration": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe usage configuration to apply to child datasets that reference this dataset as a source.\u003c/p\u003e",
        "properties": {
          "DisableUseAsDirectQuerySource": {
            "default": false,
            "description": "\u003cp\u003eAn option that controls whether a child dataset of a direct query can use this dataset as a source.\u003c/p\u003e",
            "type": "boolean"
          },
          "DisableUseAsImportedSource": {
            "default": false,
            "description": "\u003cp\u003eAn option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.\u003c/p\u003e",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DatasetParameter": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA dataset parameter.\u003c/p\u003e",
        "properties": {
          "DateTimeDatasetParameter": {
            "$ref": "#/definitions/DateTimeDatasetParameter"
          },
          "DecimalDatasetParameter": {
            "$ref": "#/definitions/DecimalDatasetParameter"
          },
          "IntegerDatasetParameter": {
            "$ref": "#/definitions/IntegerDatasetParameter"
          },
          "StringDatasetParameter": {
            "$ref": "#/definitions/StringDatasetParameter"
          }
        },
        "type": "object"
      },
      "DatasetParameterValueType": {
        "enum": [
          "MULTI_VALUED",
          "SINGLE_VALUED"
        ],
        "type": "string"
      },
      "DateTimeDatasetParameter": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA date time parameter for a dataset.\u003c/p\u003e",
        "properties": {
          "DefaultValues": {
            "$ref": "#/definitions/DateTimeDatasetParameterDefaultValues"
          },
          "Id": {
            "description": "\u003cp\u003eAn identifier for the parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-]+$",
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eThe name of the date time parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "TimeGranularity": {
            "$ref": "#/definitions/TimeGranularity"
          },
          "ValueType": {
            "$ref": "#/definitions/DatasetParameterValueType"
          }
        },
        "required": [
          "Id",
          "Name",
          "ValueType"
        ],
        "type": "object"
      },
      "DateTimeDatasetParameterDefaultValues": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe default values of a date time parameter.\u003c/p\u003e",
        "properties": {
          "StaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given date time parameter.\u003c/p\u003e",
            "items": {
              "description": "\u003cp\u003eThe default value for the date time parameter.\u003c/p\u003e",
              "type": "string"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DecimalDatasetParameter": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA decimal parameter for a dataset.\u003c/p\u003e",
        "properties": {
          "DefaultValues": {
            "$ref": "#/definitions/DecimalDatasetParameterDefaultValues"
          },
          "Id": {
            "description": "\u003cp\u003eAn identifier for the decimal parameter created in the dataset.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-]+$",
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eThe name of the decimal parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "ValueType": {
            "$ref": "#/definitions/DatasetParameterValueType"
          }
        },
        "required": [
          "Id",
          "Name",
          "ValueType"
        ],
        "type": "object"
      },
      "DecimalDatasetParameterDefaultValues": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe default values of a decimal parameter.\u003c/p\u003e",
        "properties": {
          "StaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given decimal parameter.\u003c/p\u003e",
            "items": {
              "default": 0,
              "description": "\u003cp\u003eThe default value for the decimal parameter.\u003c/p\u003e",
              "type": "number"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "FieldFolder": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA FieldFolder element is a folder that contains fields and nested subfolders.\u003c/p\u003e",
        "properties": {
          "Columns": {
            "description": "\u003cp\u003eA folder has a list of columns. A column can only be in one folder.\u003c/p\u003e",
            "items": {
              "type": "string"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "Description": {
            "description": "\u003cp\u003eThe description for a field folder.\u003c/p\u003e",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldFolderMap": {
        "additionalProperties": false,
        "patternProperties": {
          ".+": {
            "$ref": "#/definitions/FieldFolder"
          }
        },
        "type": "object"
      },
      "FileFormat": {
        "enum": [
          "CSV",
          "TSV",
          "CLF",
          "ELF",
          "XLSX",
          "JSON"
        ],
        "type": "string"
      },
      "FilterOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that filters rows based on a condition.\u003c/p\u003e",
        "properties": {
          "ConditionExpression": {
            "description": "\u003cp\u003eAn expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.\u003c/p\u003e",
            "maxLength": 4096,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "ConditionExpression"
        ],
        "type": "object"
      },
      "GeoSpatialColumnGroup": {
        "additionalProperties": false,
        "description": "\u003cp\u003eGeospatial column group that denotes a hierarchy.\u003c/p\u003e",
        "properties": {
          "Columns": {
            "description": "\u003cp\u003eColumns in this hierarchy.\u003c/p\u003e",
            "items": {
              "maxLength": 127,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 16,
            "minItems": 1,
            "type": "array"
          },
          "CountryCode": {
            "$ref": "#/definitions/GeoSpatialCountryCode"
          },
          "Name": {
            "description": "\u003cp\u003eA display name for the hierarchy.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "Columns",
          "Name"
        ],
        "type": "object"
      },
      "GeoSpatialCountryCode": {
        "enum": [
          "US"
        ],
        "type": "string"
      },
      "GeoSpatialDataRole": {
        "enum": [
          "COUNTRY",
          "STATE",
          "COUNTY",
          "CITY",
          "POSTCODE",
          "LONGITUDE",
          "LATITUDE",
          "POLITICAL1",
          "CENSUS_TRACT",
          "CENSUS_BLOCK_GROUP",
          "CENSUS_BLOCK"
        ],
        "type": "string"
      },
      "IncrementalRefresh": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe incremental refresh configuration for a dataset.\u003c/p\u003e",
        "properties": {
          "LookbackWindow": {
            "$ref": "#/definitions/LookbackWindow"
          }
        },
        "required": [
          "LookbackWindow"
        ],
        "type": "object"
      },
      "IngestionWaitPolicy": {
        "additionalProperties": false,
        "description": "\u003cp\u003eWait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.\u003c/p\u003e",
        "properties": {
          "IngestionWaitTimeInHours": {
            "default": 36,
            "description": "\u003cp\u003eThe maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.\u003c/p\u003e",
            "maximum": 36,
            "minimum": 1,
            "type": "number"
          },
          "WaitForSpiceIngestion": {
            "default": true,
            "description": "\u003cp\u003eWait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.\u003c/p\u003e",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InputColumn": {
        "additionalProperties": false,
        "description": "\u003cp\u003eMetadata for a column that is used as the input of a transform operation.\u003c/p\u003e",
        "properties": {
          "Name": {
            "description": "\u003cp\u003eThe name of this column in the underlying data source.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "SubType": {
            "$ref": "#/definitions/ColumnDataSubType"
          },
          "Type": {
            "$ref": "#/definitions/InputColumnDataType"
          }
        },
        "required": [
          "Name",
          "Type"
        ],
        "type": "object"
      },
      "InputColumnDataType": {
        "enum": [
          "STRING",
          "INTEGER",
          "DECIMAL",
          "DATETIME",
          "BIT",
          "BOOLEAN",
          "JSON"
        ],
        "type": "string"
      },
      "IntegerDatasetParameter": {
        "additionalProperties": false,
        "description": "\u003cp\u003eAn integer parameter for a dataset.\u003c/p\u003e",
        "properties": {
          "DefaultValues": {
            "$ref": "#/definitions/IntegerDatasetParameterDefaultValues"
          },
          "Id": {
            "description": "\u003cp\u003eAn identifier for the integer parameter created in the dataset.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-]+$",
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eThe name of the integer parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "ValueType": {
            "$ref": "#/definitions/DatasetParameterValueType"
          }
        },
        "required": [
          "Id",
          "Name",
          "ValueType"
        ],
        "type": "object"
      },
      "IntegerDatasetParameterDefaultValues": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe default values of an integer parameter.\u003c/p\u003e",
        "properties": {
          "StaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given integer parameter.\u003c/p\u003e",
            "items": {
              "default": 0,
              "description": "\u003cp\u003eThe default value for the integer parameter.\u003c/p\u003e",
              "type": "number"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "JoinInstruction": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe instructions associated with a join. \u003c/p\u003e",
        "properties": {
          "LeftJoinKeyProperties": {
            "$ref": "#/definitions/JoinKeyProperties"
          },
          "LeftOperand": {
            "description": "\u003cp\u003eThe operand on the left side of a join.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[0-9a-zA-Z-]*$",
            "type": "string"
          },
          "OnClause": {
            "description": "\u003cp\u003eThe join instructions provided in the \u003ccode\u003eON\u003c/code\u003e clause of a join.\u003c/p\u003e",
            "maxLength": 512,
            "minLength": 1,
            "type": "string"
          },
          "RightJoinKeyProperties": {
            "$ref": "#/definitions/JoinKeyProperties"
          },
          "RightOperand": {
            "description": "\u003cp\u003eThe operand on the right side of a join.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[0-9a-zA-Z-]*$",
            "type": "string"
          },
          "Type": {
            "$ref": "#/definitions/JoinType"
          }
        },
        "required": [
          "LeftOperand",
          "OnClause",
          "RightOperand",
          "Type"
        ],
        "type": "object"
      },
      "JoinKeyProperties": {
        "additionalProperties": false,
        "description": "\u003cp\u003eProperties associated with the columns participating in a join.\u003c/p\u003e",
        "properties": {
          "UniqueKey": {
            "description": "\u003cp\u003eA value that indicates that a row in a table is uniquely identified by the columns in\n            a join key. This is used by Amazon QuickSight to optimize query performance.\u003c/p\u003e",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "JoinType": {
        "enum": [
          "INNER",
          "OUTER",
          "LEFT",
          "RIGHT"
        ],
        "type": "string"
      },
      "LogicalTable": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA \u003ci\u003elogical table\u003c/i\u003e is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.\u003c/p\u003e",
        "properties": {
          "Alias": {
            "description": "\u003cp\u003eA display name for the logical table.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "DataTransforms": {
            "description": "\u003cp\u003eTransform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. \u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/TransformOperation"
            },
            "maxItems": 2048,
            "minItems": 1,
            "type": "array"
          },
          "Source": {
            "$ref": "#/definitions/LogicalTableSource"
          }
        },
        "required": [
          "Alias"
        ],
        "type": "object"
      },
      "LogicalTableMap": {
        "additionalProperties": false,
        "maxProperties": 64,
        "minProperties": 1,
        "patternProperties": {
          "^[0-9a-zA-Z-]*$": {
            "$ref": "#/definitions/LogicalTable"
          }
        },
        "type": "object"
      },
      "LogicalTableSource": {
        "additionalProperties": false,
        "description": "\u003cp\u003eInformation about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.\u003c/p\u003e",
        "properties": {
          "DataSetArn": {
            "description": "\u003cp\u003eThe Amazon Resource Number (ARN) of the parent dataset.\u003c/p\u003e",
            "type": "string"
          },
          "JoinInstruction": {
            "$ref": "#/definitions/JoinInstruction"
          },
          "PhysicalTableId": {
            "description": "\u003cp\u003ePhysical table ID.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[0-9a-zA-Z-]*$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LookbackWindow": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe lookback window setup of an incremental refresh configuration.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eThe name of the lookback window column.\u003c/p\u003e",
            "type": "string"
          },
          "Size": {
            "default": 0,
            "description": "\u003cp\u003eThe lookback window column size.\u003c/p\u003e",
            "minimum": 1,
            "type": "number"
          },
          "SizeUnit": {
            "$ref": "#/definitions/LookbackWindowSizeUnit"
          }
        },
        "required": [
          "ColumnName",
          "Size",
          "SizeUnit"
        ],
        "type": "object"
      },
      "LookbackWindowSizeUnit": {
        "enum": [
          "HOUR",
          "DAY",
          "WEEK"
        ],
        "type": "string"
      },
      "NewDefaultValues": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe configuration that overrides the existing default values for a dataset parameter that is inherited from another dataset.\u003c/p\u003e",
        "properties": {
          "DateTimeStaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given date time parameter.\u003c/p\u003e",
            "items": {
              "description": "\u003cp\u003eThe default value for the date time parameter.\u003c/p\u003e",
              "type": "string"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          },
          "DecimalStaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given decimal parameter.\u003c/p\u003e",
            "items": {
              "default": 0,
              "description": "\u003cp\u003eThe default value for the decimal parameter.\u003c/p\u003e",
              "type": "number"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          },
          "IntegerStaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given integer parameter.\u003c/p\u003e",
            "items": {
              "default": 0,
              "description": "\u003cp\u003eThe default value for the integer parameter.\u003c/p\u003e",
              "type": "number"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          },
          "StringStaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given string parameter.\u003c/p\u003e",
            "items": {
              "description": "\u003cp\u003eThe default value for the string parameter.\u003c/p\u003e",
              "maxLength": 512,
              "minLength": 0,
              "type": "string"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OutputColumn": {
        "additionalProperties": false,
        "description": "\u003cp\u003eOutput column.\u003c/p\u003e",
        "properties": {
          "Description": {
            "description": "\u003cp\u003eA description for a column.\u003c/p\u003e",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eThe display name of the column..\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "SubType": {
            "$ref": "#/definitions/ColumnDataSubType"
          },
          "Type": {
            "$ref": "#/definitions/ColumnDataType"
          }
        },
        "type": "object"
      },
      "OverrideDatasetParameterOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that overrides the dataset parameter values that are defined in another dataset.\u003c/p\u003e",
        "properties": {
          "NewDefaultValues": {
            "$ref": "#/definitions/NewDefaultValues"
          },
          "NewParameterName": {
            "description": "\u003cp\u003eThe new name for the parameter.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "ParameterName": {
            "description": "\u003cp\u003eThe name of the parameter to be overridden with different values.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          }
        },
        "required": [
          "ParameterName"
        ],
        "type": "object"
      },
      "PhysicalTable": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.\u003c/p\u003e",
        "properties": {
          "CustomSql": {
            "$ref": "#/definitions/CustomSql"
          },
          "RelationalTable": {
            "$ref": "#/definitions/RelationalTable"
          },
          "S3Source": {
            "$ref": "#/definitions/S3Source"
          }
        },
        "type": "object"
      },
      "PhysicalTableMap": {
        "additionalProperties": false,
        "maxProperties": 32,
        "minProperties": 0,
        "patternProperties": {
          "^[0-9a-zA-Z-]*$": {
            "$ref": "#/definitions/PhysicalTable"
          }
        },
        "type": "object"
      },
      "ProjectOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.\u003c/p\u003e",
        "properties": {
          "ProjectedColumns": {
            "description": "\u003cp\u003eProjected columns.\u003c/p\u003e",
            "items": {
              "type": "string"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ProjectedColumns"
        ],
        "type": "object"
      },
      "RefreshConfiguration": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe refresh configuration of a dataset.\u003c/p\u003e",
        "properties": {
          "IncrementalRefresh": {
            "$ref": "#/definitions/IncrementalRefresh"
          }
        },
        "required": [
          "IncrementalRefresh"
        ],
        "type": "object"
      },
      "RelationalTable": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA physical table type for relational data sources.\u003c/p\u003e",
        "properties": {
          "Catalog": {
            "description": "\u003cp\u003eThe catalog associated with a table.\u003c/p\u003e",
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "DataSourceArn": {
            "description": "\u003cp\u003eThe Amazon Resource Name (ARN) for the data source.\u003c/p\u003e",
            "type": "string"
          },
          "InputColumns": {
            "description": "\u003cp\u003eThe column schema of the table.\u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/InputColumn"
            },
            "maxItems": 2048,
            "minItems": 1,
            "type": "array"
          },
          "Name": {
            "description": "\u003cp\u003eThe name of the relational table.\u003c/p\u003e",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "Schema": {
            "description": "\u003cp\u003eThe schema name. This name applies to certain relational database engines.\u003c/p\u003e",
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "DataSourceArn",
          "Name"
        ],
        "type": "object"
      },
      "RenameColumnOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that renames a column.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eThe name of the column to be renamed.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "NewColumnName": {
            "description": "\u003cp\u003eThe new name for the column.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "ColumnName",
          "NewColumnName"
        ],
        "type": "object"
      },
      "ResourcePermission": {
        "additionalProperties": false,
        "description": "\u003cp\u003ePermission for the resource.\u003c/p\u003e",
        "properties": {
          "Actions": {
            "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e",
            "items": {
              "type": "string"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "Principal": {
            "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n         \u003cul\u003e\n            \u003cli\u003e\n               \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n               \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n               \u003cp\u003eThe ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "Actions",
          "Principal"
        ],
        "type": "object"
      },
      "RowLevelPermissionDataSet": {
        "additionalProperties": false,
        "description": "\u003cp\u003eInformation about a dataset that contains permissions for row-level security (RLS).\n            The permissions dataset maps fields to users or groups. For more information, see\n            \u003ca href=\"https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html\"\u003eUsing Row-Level Security (RLS) to Restrict Access to a Dataset\u003c/a\u003e in the \u003ci\u003eAmazon QuickSight User\n                Guide\u003c/i\u003e.\u003c/p\u003e\n         \u003cp\u003eThe option to deny permissions by setting \u003ccode\u003ePermissionPolicy\u003c/code\u003e to \u003ccode\u003eDENY_ACCESS\u003c/code\u003e is\n            not supported for new RLS datasets.\u003c/p\u003e",
        "properties": {
          "Arn": {
            "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.\u003c/p\u003e",
            "type": "string"
          },
          "FormatVersion": {
            "$ref": "#/definitions/RowLevelPermissionFormatVersion"
          },
          "Namespace": {
            "description": "\u003cp\u003eThe namespace associated with the dataset that contains permissions for RLS.\u003c/p\u003e",
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9._-]*$",
            "type": "string"
          },
          "PermissionPolicy": {
            "$ref": "#/definitions/RowLevelPermissionPolicy"
          },
          "Status": {
            "$ref": "#/definitions/Status"
          }
        },
        "required": [
          "Arn",
          "PermissionPolicy"
        ],
        "type": "object"
      },
      "RowLevelPermissionFormatVersion": {
        "enum": [
          "VERSION_1",
          "VERSION_2"
        ],
        "type": "string"
      },
      "RowLevelPermissionPolicy": {
        "enum": [
          "GRANT_ACCESS",
          "DENY_ACCESS"
        ],
        "type": "string"
      },
      "RowLevelPermissionTagConfiguration": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe configuration of tags on a dataset to set row-level security. \u003c/p\u003e",
        "properties": {
          "Status": {
            "$ref": "#/definitions/Status"
          },
          "TagRuleConfigurations": {
            "description": "\u003cp\u003eA list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.\u003c/p\u003e",
            "items": {
              "items": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "TagRules": {
            "description": "\u003cp\u003eA set of rules associated with row-level security, such as the tag names and columns that they are assigned to.\u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/RowLevelPermissionTagRule"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "TagRules"
        ],
        "type": "object"
      },
      "RowLevelPermissionTagRule": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA set of rules associated with a tag.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eThe column name that a tag key is assigned to.\u003c/p\u003e",
            "type": "string"
          },
          "MatchAllValue": {
            "description": "\u003cp\u003eA string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.\u003c/p\u003e",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "TagKey": {
            "description": "\u003cp\u003eThe unique key for a tag.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "TagMultiValueDelimiter": {
            "description": "\u003cp\u003eA string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.\u003c/p\u003e",
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          }
        },
        "required": [
          "ColumnName",
          "TagKey"
        ],
        "type": "object"
      },
      "S3Source": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA physical table type for an S3 data source.\u003c/p\u003e",
        "properties": {
          "DataSourceArn": {
            "description": "\u003cp\u003eThe Amazon Resource Name (ARN) for the data source.\u003c/p\u003e",
            "type": "string"
          },
          "InputColumns": {
            "description": "\u003cp\u003eA physical table type for an S3 data source.\u003c/p\u003e\n         \u003cnote\u003e\n            \u003cp\u003eFor files that aren't JSON, only \u003ccode\u003eSTRING\u003c/code\u003e data types are supported in input columns.\u003c/p\u003e\n         \u003c/note\u003e",
            "items": {
              "$ref": "#/definitions/InputColumn"
            },
            "maxItems": 2048,
            "minItems": 1,
            "type": "array"
          },
          "UploadSettings": {
            "$ref": "#/definitions/UploadSettings"
          }
        },
        "required": [
          "DataSourceArn",
          "InputColumns"
        ],
        "type": "object"
      },
      "Status": {
        "enum": [
          "ENABLED",
          "DISABLED"
        ],
        "type": "string"
      },
      "StringDatasetParameter": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA string parameter for a dataset.\u003c/p\u003e",
        "properties": {
          "DefaultValues": {
            "$ref": "#/definitions/StringDatasetParameterDefaultValues"
          },
          "Id": {
            "description": "\u003cp\u003eAn identifier for the string parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9-]+$",
            "type": "string"
          },
          "Name": {
            "description": "\u003cp\u003eThe name of the string parameter that is created in the dataset.\u003c/p\u003e",
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string"
          },
          "ValueType": {
            "$ref": "#/definitions/DatasetParameterValueType"
          }
        },
        "required": [
          "Id",
          "Name",
          "ValueType"
        ],
        "type": "object"
      },
      "StringDatasetParameterDefaultValues": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe default values of a string parameter.\u003c/p\u003e",
        "properties": {
          "StaticValues": {
            "description": "\u003cp\u003eA list of static default values for a given string parameter.\u003c/p\u003e",
            "items": {
              "description": "\u003cp\u003eThe default value for the string parameter.\u003c/p\u003e",
              "maxLength": 512,
              "minLength": 0,
              "type": "string"
            },
            "maxItems": 32,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Tag": {
        "additionalProperties": false,
        "description": "\u003cp\u003eThe key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.\u003c/p\u003e",
        "properties": {
          "Key": {
            "description": "\u003cp\u003eTag key.\u003c/p\u003e",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "Value": {
            "description": "\u003cp\u003eTag value.\u003c/p\u003e",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "type": "object"
      },
      "TagColumnOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that tags a column with additional information.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eThe column that this operation acts on.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "Tags": {
            "description": "\u003cp\u003eThe dataset column tag, currently only used for geospatial type tagging.\u003c/p\u003e\n         \u003cnote\u003e\n            \u003cp\u003eThis is not tags for the Amazon Web Services tagging feature.\u003c/p\u003e\n         \u003c/note\u003e",
            "items": {
              "$ref": "#/definitions/ColumnTag"
            },
            "maxItems": 16,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ColumnName",
          "Tags"
        ],
        "type": "object"
      },
      "TextQualifier": {
        "enum": [
          "DOUBLE_QUOTE",
          "SINGLE_QUOTE"
        ],
        "type": "string"
      },
      "TimeGranularity": {
        "enum": [
          "YEAR",
          "QUARTER",
          "MONTH",
          "WEEK",
          "DAY",
          "HOUR",
          "MINUTE",
          "SECOND",
          "MILLISECOND"
        ],
        "type": "string"
      },
      "TransformOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.\u003c/p\u003e",
        "properties": {
          "CastColumnTypeOperation": {
            "$ref": "#/definitions/CastColumnTypeOperation"
          },
          "CreateColumnsOperation": {
            "$ref": "#/definitions/CreateColumnsOperation"
          },
          "FilterOperation": {
            "$ref": "#/definitions/FilterOperation"
          },
          "OverrideDatasetParameterOperation": {
            "$ref": "#/definitions/OverrideDatasetParameterOperation"
          },
          "ProjectOperation": {
            "$ref": "#/definitions/ProjectOperation"
          },
          "RenameColumnOperation": {
            "$ref": "#/definitions/RenameColumnOperation"
          },
          "TagColumnOperation": {
            "$ref": "#/definitions/TagColumnOperation"
          },
          "UntagColumnOperation": {
            "$ref": "#/definitions/UntagColumnOperation"
          }
        },
        "type": "object"
      },
      "UntagColumnOperation": {
        "additionalProperties": false,
        "description": "\u003cp\u003eA transform operation that removes tags associated with a column.\u003c/p\u003e",
        "properties": {
          "ColumnName": {
            "description": "\u003cp\u003eThe column that this operation acts on.\u003c/p\u003e",
            "maxLength": 127,
            "minLength": 1,
            "type": "string"
          },
          "TagNames": {
            "description": "\u003cp\u003eThe column tags to remove from this column.\u003c/p\u003e",
            "items": {
              "$ref": "#/definitions/ColumnTagName"
            },
            "type": "array"
          }
        },
        "required": [
          "ColumnName",
          "TagNames"
        ],
        "type": "object"
      },
      "UploadSettings": {
        "additionalProperties": false,
        "description": "\u003cp\u003eInformation about the format for a source file or files.\u003c/p\u003e",
        "properties": {
          "ContainsHeader": {
            "description": "\u003cp\u003eWhether the file has a header row, or the files each have a header row.\u003c/p\u003e",
            "type": "boolean"
          },
          "Delimiter": {
            "description": "\u003cp\u003eThe delimiter between values in the file.\u003c/p\u003e",
            "maxLength": 1,
            "minLength": 1,
            "type": "string"
          },
          "Format": {
            "$ref": "#/definitions/FileFormat"
          },
          "StartFromRow": {
            "description": "\u003cp\u003eA row number to start reading data from.\u003c/p\u003e",
            "minimum": 1,
            "type": "number"
          },
          "TextQualifier": {
            "$ref": "#/definitions/TextQualifier"
          }
        },
        "type": "object"
      }
    },
    "description": "Definition of the AWS::QuickSight::DataSet Resource Type.",
    "handlers": {
      "create": {
        "permissions": [
          "quicksight:DescribeDataSet",
          "quicksight:DescribeDataSetPermissions",
          "quicksight:DescribeIngestion",
          "quicksight:ListIngestions",
          "quicksight:CreateDataSet",
          "quicksight:PassDataSource",
          "quicksight:PassDataSet",
          "quicksight:TagResource",
          "quicksight:ListTagsForResource",
          "quicksight:DescribeDataSetRefreshProperties",
          "quicksight:PutDataSetRefreshProperties",
          "quicksight:CreateFolderMembership",
          "quicksight:DeleteFolderMembership",
          "quicksight:ListFoldersForResource"
        ]
      },
      "delete": {
        "permissions": [
          "quicksight:DescribeDataSet",
          "quicksight:DeleteDataSet",
          "quicksight:ListTagsForResource",
          "quicksight:DescribeIngestion",
          "quicksight:DeleteDataSetRefreshProperties",
          "quicksight:DescribeDataSetRefreshProperties"
        ]
      },
      "list": {
        "permissions": [
          "quicksight:DescribeDataSet",
          "quicksight:ListDataSets"
        ]
      },
      "read": {
        "permissions": [
          "quicksight:DescribeDataSet",
          "quicksight:DescribeDataSetPermissions",
          "quicksight:ListTagsForResource",
          "quicksight:DescribeDataSetRefreshProperties"
        ]
      },
      "update": {
        "permissions": [
          "quicksight:DescribeDataSet",
          "quicksight:DescribeDataSetPermissions",
          "quicksight:PassDataSource",
          "quicksight:UpdateDataSet",
          "quicksight:UpdateDataSetPermissions",
          "quicksight:PassDataSet",
          "quicksight:DescribeIngestion",
          "quicksight:ListIngestions",
          "quicksight:CancelIngestion",
          "quicksight:CreateFolderMembership",
          "quicksight:DeleteFolderMembership",
          "quicksight:ListFoldersForResource",
          "quicksight:TagResource",
          "quicksight:UntagResource",
          "quicksight:ListTagsForResource",
          "quicksight:PutDataSetRefreshProperties",
          "quicksight:DescribeDataSetRefreshProperties",
          "quicksight:DeleteDataSetRefreshProperties"
        ]
      }
    },
    "primaryIdentifier": [
      "/properties/AwsAccountId",
      "/properties/DataSetId"
    ],
    "properties": {
      "Arn": {
        "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e",
        "type": "string"
      },
      "AwsAccountId": {
        "maxLength": 12,
        "minLength": 12,
        "pattern": "^[0-9]{12}$",
        "type": "string"
      },
      "ColumnGroups": {
        "description": "\u003cp\u003eGroupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/ColumnGroup"
        },
        "maxItems": 8,
        "minItems": 1,
        "type": "array"
      },
      "ColumnLevelPermissionRules": {
        "description": "\u003cp\u003eA set of one or more definitions of a \u003ccode\u003e\n               \u003ca href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\"\u003eColumnLevelPermissionRule\u003c/a\u003e\n            \u003c/code\u003e.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/ColumnLevelPermissionRule"
        },
        "minItems": 1,
        "type": "array"
      },
      "ConsumedSpiceCapacityInBytes": {
        "default": 0,
        "description": "\u003cp\u003eThe amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.\u003c/p\u003e",
        "type": "number"
      },
      "CreatedTime": {
        "description": "\u003cp\u003eThe time that this dataset was created.\u003c/p\u003e",
        "format": "string",
        "type": "string"
      },
      "DataSetId": {
        "type": "string"
      },
      "DataSetRefreshProperties": {
        "$ref": "#/definitions/DataSetRefreshProperties"
      },
      "DataSetUsageConfiguration": {
        "$ref": "#/definitions/DataSetUsageConfiguration"
      },
      "DatasetParameters": {
        "description": "\u003cp\u003eThe parameter declarations of the dataset.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/DatasetParameter"
        },
        "maxItems": 32,
        "minItems": 0,
        "type": "array"
      },
      "FieldFolders": {
        "$ref": "#/definitions/FieldFolderMap"
      },
      "FolderArns": {
        "description": "\u003cp\u003eWhen you create the dataset, Amazon QuickSight adds the dataset to these folders.\u003c/p\u003e",
        "items": {
          "type": "string"
        },
        "maxItems": 10,
        "minItems": 0,
        "type": "array"
      },
      "ImportMode": {
        "$ref": "#/definitions/DataSetImportMode"
      },
      "IngestionWaitPolicy": {
        "$ref": "#/definitions/IngestionWaitPolicy"
      },
      "LastUpdatedTime": {
        "description": "\u003cp\u003eThe last time that this dataset was updated.\u003c/p\u003e",
        "format": "string",
        "type": "string"
      },
      "LogicalTableMap": {
        "$ref": "#/definitions/LogicalTableMap"
      },
      "Name": {
        "description": "\u003cp\u003eThe display name for the dataset.\u003c/p\u003e",
        "maxLength": 128,
        "minLength": 1,
        "type": "string"
      },
      "OutputColumns": {
        "description": "\u003cp\u003eThe list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/OutputColumn"
        },
        "type": "array"
      },
      "Permissions": {
        "description": "\u003cp\u003eA list of resource permissions on the dataset.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/ResourcePermission"
        },
        "maxItems": 64,
        "minItems": 1,
        "type": "array"
      },
      "PhysicalTableMap": {
        "$ref": "#/definitions/PhysicalTableMap"
      },
      "RowLevelPermissionDataSet": {
        "$ref": "#/definitions/RowLevelPermissionDataSet"
      },
      "RowLevelPermissionTagConfiguration": {
        "$ref": "#/definitions/RowLevelPermissionTagConfiguration"
      },
      "Tags": {
        "description": "\u003cp\u003eContains a map of the key-value pairs for the resource tag or tags assigned to the dataset.\u003c/p\u003e",
        "items": {
          "$ref": "#/definitions/Tag"
        },
        "maxItems": 200,
        "minItems": 1,
        "type": "array"
      }
    },
    "readOnlyProperties": [
      "/properties/Arn",
      "/properties/ConsumedSpiceCapacityInBytes",
      "/properties/CreatedTime",
      "/properties/LastUpdatedTime",
      "/properties/OutputColumns"
    ],
    "tagging": {
      "cloudFormationSystemTags": true,
      "tagOnCreate": true,
      "tagProperty": "/properties/Tags",
      "tagUpdatable": true,
      "taggable": true
    },
    "typeName": "AWS::QuickSight::DataSet",
    "writeOnlyProperties": [
      "/properties/FieldFolders",
      "/properties/IngestionWaitPolicy",
      "/properties/FolderArns"
    ]
  }
}