[
  {
    "$type": "StringLiteralType",
    "value": "AWS.AppSync/DomainNameProperties"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/DomainNameProperties",
    "properties": {
      "AppSyncDomainName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2
      },
      "CertificateArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1
      },
      "Description": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0
      },
      "DomainName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17
      },
      "HostedZoneId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/DomainName",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.AppSync/DomainName@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.AppSync/DomainNameApiAssociationProperties"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/DomainNameApiAssociationProperties",
    "properties": {
      "ApiAssociationIdentifier": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 18
      },
      "ApiId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1
      },
      "DomainName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/DomainNameApiAssociation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.AppSync/DomainNameApiAssociation@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/7"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "AppSyncRuntime",
    "properties": {
      "Name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS."
      },
      "RuntimeVersion": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The version of the runtime to use. Currently, the only allowed version is 1.0.0."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LambdaConflictHandlerConfig",
    "properties": {
      "LambdaConflictHandlerArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SyncConfig",
    "properties": {
      "ConflictDetection": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The Conflict Detection strategy to use."
      },
      "ConflictHandler": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Conflict Resolution strategy to perform in the event of a conflict."
      },
      "LambdaConflictHandlerConfig": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.AppSync/FunctionConfigurationProperties"
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/FunctionConfigurationProperties",
    "properties": {
      "ApiId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The AWS AppSync GraphQL API that you want to attach using this function."
      },
      "Code": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The resolver code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS."
      },
      "CodeS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "The Amazon S3 endpoint (where the code is located??)."
      },
      "DataSourceName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The name of data source this function will attach."
      },
      "Description": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The function description."
      },
      "FunctionArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 18,
        "description": "The ARN for the function generated by the service"
      },
      "FunctionId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "The unique identifier for the function generated by the service"
      },
      "FunctionVersion": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The version of the request mapping template. Currently, only the 2018-05-29 version of the template is supported."
      },
      "MaxBatchSize": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation."
      },
      "Name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The name of the function."
      },
      "RequestMappingTemplate": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template."
      },
      "RequestMappingTemplateS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "Describes a Sync configuration for a resolver. Contains information on which Conflict Detection, as well as Resolution strategy, should be performed when the resolver is invoked."
      },
      "ResponseMappingTemplate": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Function response mapping template."
      },
      "ResponseMappingTemplateS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template."
      },
      "Runtime": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified."
      },
      "SyncConfig": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/FunctionConfiguration",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.AppSync/FunctionConfiguration@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/15"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "AppSyncRuntime",
    "properties": {
      "Name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The ``name`` of the runtime to use. Currently, the only allowed value is ``APPSYNC_JS``."
      },
      "RuntimeVersion": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The ``version`` of the runtime to use. Currently, the only allowed version is ``1.0.0``."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CachingConfig",
    "properties": {
      "CachingKeys": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "The caching keys for a resolver that has caching activated.\n Valid values are entries from the ``$context.arguments``, ``$context.source``, and ``$context.identity`` maps."
      },
      "Ttl": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 1,
        "description": "The TTL in seconds for a resolver that has caching activated.\n Valid values are 1?3,600 seconds."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LambdaConflictHandlerConfig",
    "properties": {
      "LambdaConflictHandlerArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineConfig",
    "properties": {
      "Functions": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "A list of ``Function`` objects."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SyncConfig",
    "properties": {
      "ConflictDetection": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The Conflict Detection strategy to use.\n  +   *VERSION*: Detect conflicts based on object versions for this resolver.\n  +   *NONE*: Do not detect conflicts when invoking this resolver."
      },
      "ConflictHandler": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The Conflict Resolution strategy to perform in the event of a conflict.\n  +   *OPTIMISTIC_CONCURRENCY*: Resolve conflicts by rejecting mutations when versions don't match the latest version at the server.\n  +   *AUTOMERGE*: Resolve conflicts with the Automerge conflict resolution strategy.\n  +   *LAMBDA*: Resolve conflicts with an LAMlong function supplied in the ``LambdaConflictHandlerConfig``."
      },
      "LambdaConflictHandlerConfig": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The ``LambdaConflictHandlerConfig`` when configuring ``LAMBDA`` as the Conflict Handler."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.AppSync/ResolverProperties"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/ResolverProperties",
    "properties": {
      "ApiId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The APSYlong GraphQL API to which you want to attach this resolver."
      },
      "CachingConfig": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "The caching configuration for the resolver."
      },
      "Code": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The ``resolver`` code that contains the request and response functions. When code is used, the ``runtime`` is required. The runtime value must be ``APPSYNC_JS``."
      },
      "CodeS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "The Amazon S3 endpoint."
      },
      "DataSourceName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The resolver data source name."
      },
      "FieldName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The GraphQL field on a type that invokes the resolver."
      },
      "Kind": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The resolver type.\n  +   *UNIT*: A UNIT resolver type. A UNIT resolver is the default resolver type. You can use a UNIT resolver to run a GraphQL query against a single data source.\n  +   *PIPELINE*: A PIPELINE resolver type. You can use a PIPELINE resolver to invoke a series of ``Function`` objects in a serial manner. You can use a pipeline resolver to run a GraphQL query against multiple data sources."
      },
      "MaxBatchSize": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The maximum number of resolver request inputs that will be sent to a single LAMlong function in a ``BatchInvoke`` operation."
      },
      "MetricsConfig": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "Enables or disables enhanced resolver metrics for specified resolvers. Note that ``MetricsConfig`` won't be used unless the ``resolverLevelMetricsBehavior`` value is set to ``PER_RESOLVER_METRICS``. If the ``resolverLevelMetricsBehavior`` is set to ``FULL_REQUEST_RESOLVER_METRICS`` instead, ``MetricsConfig`` will be ignored. However, you can still set its value."
      },
      "PipelineConfig": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Functions linked with the pipeline resolver."
      },
      "RequestMappingTemplate": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The request mapping template.\n Request mapping templates are optional when using a Lambda data source. For all other data sources, a request mapping template is required."
      },
      "RequestMappingTemplateS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "The location of a request mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template."
      },
      "ResolverArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 18,
        "description": ""
      },
      "ResponseMappingTemplate": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "The response mapping template."
      },
      "ResponseMappingTemplateS3Location": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "The location of a response mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template."
      },
      "Runtime": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified."
      },
      "SyncConfig": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The ``SyncConfig`` for a resolver attached to a versioned data source."
      },
      "TypeName": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 1,
        "description": "The GraphQL type that invokes this resolver."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/Resolver",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.AppSync/Resolver@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/26"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "SourceApiAssociationConfig",
    "properties": {
      "MergeType": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "Configuration of the merged behavior for the association. For example when it could be auto or has to be manual."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.AppSync/SourceApiAssociationProperties"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/SourceApiAssociationProperties",
    "properties": {
      "AssociationArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 18,
        "description": "ARN of the SourceApiAssociation."
      },
      "AssociationId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "Id of the SourceApiAssociation."
      },
      "Description": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "Description of the SourceApiAssociation."
      },
      "LastSuccessfulMergeDate": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "Date of last schema successful merge."
      },
      "MergedApiArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "ARN of the Merged API in the association."
      },
      "MergedApiId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "GraphQLApiId of the Merged API in the association."
      },
      "MergedApiIdentifier": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN"
      },
      "SourceApiArn": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "ARN of the source API in the association."
      },
      "SourceApiAssociationConfig": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "Customized configuration for SourceApiAssociation."
      },
      "SourceApiAssociationStatus": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "Current status of SourceApiAssociation."
      },
      "SourceApiAssociationStatusDetail": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "Current SourceApiAssociation status details."
      },
      "SourceApiId": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 2,
        "description": "GraphQLApiId of the source API in the association."
      },
      "SourceApiIdentifier": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 4,
        "description": "Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.AppSync/SourceApiAssociation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 16,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.AppSync/SourceApiAssociation@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/31"
    },
    "flags": 0
  }
]