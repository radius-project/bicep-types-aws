[
  {
    "$type": "ObjectType",
    "name": "AutomaticTerminationMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "SessionBackupMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "SessionPersistenceMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StreamConfiguration",
    "properties": {
      "AutomaticTerminationMode": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "ClipboardMode": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1
      },
      "Ec2InstanceTypes": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 1,
        "description": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>"
      },
      "MaxSessionLengthInMinutes": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>The length of time, in minutes, that a streaming session can be active before it is\n            stopped or terminated. After this point, Nimble Studio automatically terminates or\n            stops the session. The default length of time is 690 minutes, and the maximum length of\n            time is 30 days.</p>"
      },
      "MaxStoppedSessionLengthInMinutes": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>Integer that determines if you can start and stop your sessions and how long a session\n            can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is\n            5760.</p>\n         <p>This field is allowed only when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\n                <code>ACTIVATED</code>.</p>\n         <p>If the value is set to 0, your sessions can?t be <code>STOPPED</code>. If you then\n            call <code>StopStreamingSession</code>, the session fails. If the time that a session\n            stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\n            value, the session will automatically be terminated (instead of\n            <code>STOPPED</code>).</p>\n         <p>If the value is set to a positive number, the session can be stopped. You can call\n                <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state.\n            If the time that a session stays in the <code>READY</code> state exceeds the\n                <code>maxSessionLengthInMinutes</code> value, the session will automatically be\n            stopped (instead of terminated).</p>"
      },
      "SessionBackup": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0
      },
      "SessionPersistenceMode": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "SessionStorage": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0
      },
      "StreamingImageIds": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "<p>The streaming images that users can select from when launching a streaming session\n            with this launch profile.</p>"
      },
      "VolumeConfiguration": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamConfigurationSessionBackup",
    "properties": {
      "MaxBackupsToRetain": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>The maximum number of backups that each streaming session created from this launch\n            profile can have.</p>"
      },
      "Mode": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamConfigurationSessionStorage",
    "properties": {
      "Mode": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "<p>Allows artists to upload files to their workstations. The only valid option is\n                <code>UPLOAD</code>.</p>"
      },
      "Root": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingClipboardMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StreamingInstanceType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StreamingSessionStorageMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StreamingSessionStorageRoot",
    "properties": {
      "Linux": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The folder path in Linux workstations where files are uploaded.</p>"
      },
      "Windows": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The folder path in Windows workstations where files are uploaded.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "VolumeConfiguration",
    "properties": {
      "Iops": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>The number of I/O operations per second for the root volume that is attached to\n            streaming session.</p>"
      },
      "Size": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>The size of the root volume that is attached to the streaming session. The root volume\n            size is measured in GiBs.</p>"
      },
      "Throughput": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "<p>The throughput to provision for the root volume that is attached to the streaming\n            session. The throughput is measured in MiB/s.</p>"
      }
    }
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.NimbleStudio/LaunchProfileProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/LaunchProfileProperties",
    "properties": {
      "Description": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The description.</p>"
      },
      "Ec2SubnetIds": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "<p>Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from.\n            These subnets must support the specified instance types. </p>"
      },
      "LaunchProfileId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 18
      },
      "LaunchProfileProtocolVersions": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
      },
      "Name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The name for the launch profile.</p>"
      },
      "StreamConfiguration": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 1
      },
      "StudioComponentIds": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>"
      },
      "StudioId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "<p>The studio ID. </p>"
      },
      "Tags": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/LaunchProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.NimbleStudio/LaunchProfile@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/22"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "StreamingImageEncryptionConfiguration",
    "properties": {
      "KeyArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The ARN for a KMS key that is used to encrypt studio data.</p>"
      },
      "KeyType": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingImageEncryptionConfigurationKeyType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.NimbleStudio/StreamingImageProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/StreamingImageProperties",
    "properties": {
      "Description": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>A human-readable description of the streaming image.</p>"
      },
      "Ec2ImageId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The ID of an EC2 machine image with which to create this streaming image.</p>"
      },
      "EncryptionConfiguration": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 2
      },
      "EulaIds": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "<p>The list of EULAs that must be accepted before a Streaming Session can be started using this streaming image.</p>"
      },
      "Name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>A friendly name for a streaming image resource.</p>"
      },
      "Owner": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "<p>The owner of the streaming image, either the studioId that contains the streaming image, or 'amazon' for images that are provided by Amazon Nimble Studio.</p>"
      },
      "Platform": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "<p>The platform of the streaming image, either WINDOWS or LINUX.</p>"
      },
      "StreamingImageId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 18
      },
      "StudioId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "<p>The studioId. </p>"
      },
      "Tags": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/StreamingImage",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.NimbleStudio/StreamingImage@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/30"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "StudioEncryptionConfiguration",
    "properties": {
      "KeyArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The ARN for a KMS key that is used to encrypt studio data.</p>"
      },
      "KeyType": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StudioEncryptionConfigurationKeyType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.NimbleStudio/StudioProperties"
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/StudioProperties",
    "properties": {
      "AdminRoleArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.</p>"
      },
      "DisplayName": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>A friendly name for the studio.</p>"
      },
      "HomeRegion": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "<p>The Amazon Web Services Region where the studio resource is located.</p>"
      },
      "SsoClientId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "<p>The Amazon Web Services SSO application client ID used to integrate with Amazon Web Services SSO to enable Amazon Web Services SSO users to log in to Nimble Studio portal.</p>"
      },
      "StudioEncryptionConfiguration": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0
      },
      "StudioId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 18
      },
      "StudioName": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.</p>"
      },
      "StudioUrl": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "<p>The address of the web page for the studio.</p>"
      },
      "Tags": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0
      },
      "UserRoleArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/Studio",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.NimbleStudio/Studio@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/37"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "ActiveDirectoryComputerAttribute",
    "properties": {
      "Name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The name for the LDAP attribute.</p>"
      },
      "Value": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The value for the LDAP attribute.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActiveDirectoryConfiguration",
    "properties": {
      "ComputerAttributes": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "<p>A collection of custom attributes for an Active Directory computer.</p>"
      },
      "DirectoryId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The directory ID of the Directory Service for Microsoft Active Directory to access\n            using this studio component.</p>"
      },
      "OrganizationalUnitDistinguishedName": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeFarmConfiguration",
    "properties": {
      "ActiveDirectoryUser": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The name of an Active Directory user that is used on ComputeFarm worker\n            instances.</p>"
      },
      "Endpoint": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The endpoint of the ComputeFarm that is accessed by the studio component\n            resource.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LaunchProfilePlatform",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "LicenseServiceConfiguration",
    "properties": {
      "Endpoint": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The endpoint of the license service that is accessed by the studio component\n            resource.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptParameterKeyValue",
    "properties": {
      "Key": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>A script parameter key.</p>"
      },
      "Value": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>A script parameter value.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedFileSystemConfiguration",
    "properties": {
      "Endpoint": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The endpoint of the shared file system that is accessed by the studio component\n            resource.</p>"
      },
      "FileSystemId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The unique identifier for a file system.</p>"
      },
      "LinuxMountPoint": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The mount location for a shared file system on a Linux virtual workstation.</p>"
      },
      "ShareName": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The name of the file share.</p>"
      },
      "WindowsMountDrive": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The mount location for a shared file system on a Windows virtual workstation.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StudioComponentConfiguration",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StudioComponentInitializationScript",
    "properties": {
      "LaunchProfileProtocolVersion": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
      },
      "Platform": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "RunContext": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "Script": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The initialization script.</p>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StudioComponentInitializationScriptRunContext",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StudioComponentSubtype",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "StudioComponentType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {}
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/39"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.NimbleStudio/StudioComponentProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/47"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/44"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/StudioComponentProperties",
    "properties": {
      "Configuration": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0
      },
      "Description": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "<p>The description.</p>"
      },
      "Ec2SecurityGroupIds": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "<p>The EC2 security groups that control access to the studio component.</p>"
      },
      "InitializationScripts": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "<p>Initialization scripts for studio components.</p>"
      },
      "Name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "<p>The name for the studio component.</p>"
      },
      "RuntimeRoleArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "ScriptParameters": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "<p>Parameters for the studio component scripts.</p>"
      },
      "SecureInitializationRoleArn": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "StudioComponentId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 18
      },
      "StudioId": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "<p>The studio ID. </p>"
      },
      "Subtype": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "Tags": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0
      },
      "Type": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.NimbleStudio/StudioComponent",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.NimbleStudio/StudioComponent@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/58"
    },
    "flags": 0
  }
]