[
  {
    "$type": "ObjectType",
    "name": "APISchema",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ActionGroupExecutor",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ActionGroupSignature",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ActionGroupState",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "AgentActionGroup",
    "properties": {
      "ActionGroupExecutor": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 0
      },
      "ActionGroupName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name of the action group"
      },
      "ActionGroupState": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "ApiSchema": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of action group"
      },
      "FunctionSchema": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0
      },
      "ParentActionGroupSignature": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "SkipResourceInUseCheckOnDelete": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Specifies whether to allow deleting action group while it is in use."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentKnowledgeBase",
    "properties": {
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Description of the Resource."
      },
      "KnowledgeBaseId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Identifier for a resource."
      },
      "KnowledgeBaseState": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentStatus",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "CreationMode",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "CustomControlMethod",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "Function",
    "properties": {
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of function"
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name for a resource."
      },
      "Parameters": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FunctionSchema",
    "properties": {
      "Functions": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "List of Function definitions"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GuardrailConfiguration",
    "properties": {
      "GuardrailIdentifier": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Identifier for the guardrail, could be the id or the arn"
      },
      "GuardrailVersion": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Version of the guardrail"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InferenceConfiguration",
    "properties": {
      "MaximumLength": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Maximum length of output"
      },
      "StopSequences": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "List of stop sequences"
      },
      "Temperature": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Controls randomness, higher values increase diversity"
      },
      "TopK": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Sample from the k most likely next tokens"
      },
      "TopP": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Cumulative probability cutoff for token selection"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KnowledgeBaseState",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ParameterDetail",
    "properties": {
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of function parameter."
      },
      "Required": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Information about if a parameter is required for function call. Default to false."
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ParameterMap",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "PromptConfiguration",
    "properties": {
      "BasePromptTemplate": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Base Prompt Template."
      },
      "InferenceConfiguration": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0
      },
      "ParserMode": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "PromptCreationMode": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "PromptState": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "PromptType": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PromptOverrideConfiguration",
    "properties": {
      "OverrideLambda": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "ARN of a Lambda."
      },
      "PromptConfigurations": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "List of BasePromptConfiguration"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PromptState",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "PromptType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "S3Identifier",
    "properties": {
      "S3BucketName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "A bucket in S3."
      },
      "S3ObjectKey": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "A object key in S3."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TagsMap",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "Type",
    "properties": {}
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/9"
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/16"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.Bedrock/AgentProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/4"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/5"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/AgentProperties",
    "properties": {
      "ActionGroups": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 4,
        "description": "List of ActionGroups"
      },
      "AgentArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Arn representation of the Agent."
      },
      "AgentId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 18,
        "description": "Identifier for a resource."
      },
      "AgentName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name for a resource."
      },
      "AgentResourceRoleArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "ARN of a IAM role."
      },
      "AgentStatus": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2
      },
      "AgentVersion": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Draft Agent Version."
      },
      "AutoPrepare": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 4,
        "description": "Specifies whether to automatically prepare after creating or updating the agent."
      },
      "CreatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp."
      },
      "CustomerEncryptionKeyArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "A KMS key ARN"
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of the Resource."
      },
      "FailureReasons": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Failure Reasons for Error."
      },
      "FoundationModel": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "ARN or name of a Bedrock model."
      },
      "GuardrailConfiguration": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0
      },
      "IdleSessionTTLInSeconds": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Max Session Time."
      },
      "Instruction": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Instruction for the agent."
      },
      "KnowledgeBases": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "List of Agent Knowledge Bases"
      },
      "PreparedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp."
      },
      "PromptOverrideConfiguration": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0
      },
      "RecommendedActions": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "The recommended actions users can take to resolve an error in failureReasons."
      },
      "SkipResourceInUseCheckOnDelete": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 4,
        "description": "Specifies whether to allow deleting agent while it is in use."
      },
      "Tags": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      },
      "TestAliasTags": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      },
      "UpdatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/Agent",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.Bedrock/Agent@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/35"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "AgentAliasHistoryEvent",
    "properties": {
      "EndDate": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Time Stamp."
      },
      "RoutingConfiguration": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "Routing configuration for an Agent alias."
      },
      "StartDate": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Time Stamp."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentAliasRoutingConfigurationListItem",
    "properties": {
      "AgentVersion": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Agent Version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentAliasStatus",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "TagsMap",
    "properties": {}
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/38"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.Bedrock/AgentAliasProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/37"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/38"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/AgentAliasProperties",
    "properties": {
      "AgentAliasArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Arn representation of the Agent Alias."
      },
      "AgentAliasHistoryEvents": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 2,
        "description": "The list of history events for an alias for an Agent."
      },
      "AgentAliasId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 18,
        "description": "Id for an Agent Alias generated at the server side."
      },
      "AgentAliasName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name for a resource."
      },
      "AgentAliasStatus": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2
      },
      "AgentId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "Identifier for a resource."
      },
      "CreatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp."
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of the Resource."
      },
      "RoutingConfiguration": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Routing configuration for an Agent alias."
      },
      "Tags": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0
      },
      "UpdatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/AgentAlias",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.Bedrock/AgentAlias@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/46"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "ChunkingConfiguration",
    "properties": {
      "ChunkingStrategy": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "FixedSizeChunkingConfiguration": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ChunkingStrategy",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "DataDeletionPolicy",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "DataSourceConfiguration",
    "properties": {
      "S3Configuration": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataSourceStatus",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "DataSourceType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "FixedSizeChunkingConfiguration",
    "properties": {
      "MaxTokens": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "The maximum number of tokens to include in a chunk."
      },
      "OverlapPercentage": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "The percentage of overlap between adjacent chunks of a data source."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "S3DataSourceConfiguration",
    "properties": {
      "BucketArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the bucket that contains the data source."
      },
      "BucketOwnerAccountId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The account ID for the owner of the S3 bucket."
      },
      "InclusionPrefixes": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "A list of S3 prefixes that define the object containing the data sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerSideEncryptionConfiguration",
    "properties": {
      "KmsKeyArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The ARN of the AWS KMS key used to encrypt the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VectorIngestionConfiguration",
    "properties": {
      "ChunkingConfiguration": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.Bedrock/DataSourceProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/DataSourceProperties",
    "properties": {
      "CreatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The time at which the data source was created."
      },
      "DataDeletionPolicy": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0
      },
      "DataSourceConfiguration": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1
      },
      "DataSourceId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 18,
        "description": "Identifier for a resource."
      },
      "DataSourceStatus": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of the Resource."
      },
      "FailureReasons": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 2,
        "description": "The details of the failure reasons related to the data source."
      },
      "KnowledgeBaseId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "The unique identifier of the knowledge base to which to add the data source."
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the data source."
      },
      "ServerSideEncryptionConfiguration": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0
      },
      "UpdatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The time at which the knowledge base was last updated."
      },
      "VectorIngestionConfiguration": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/DataSource",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.Bedrock/DataSource@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/62"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "ContentFilter",
    "properties": {
      "InputStrength": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "OutputStrength": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentFilterConfig",
    "properties": {
      "InputStrength": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "OutputStrength": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentFilterType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ContentPolicyConfig",
    "properties": {
      "FiltersConfig": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 1,
        "description": "List of content filter configs in content policy."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FilterStrength",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "GuardrailStatus",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "ManagedWords",
    "properties": {
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedWordsConfig",
    "properties": {
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedWordsType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "PiiEntity",
    "properties": {
      "Action": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PiiEntityConfig",
    "properties": {
      "Action": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PiiEntityType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "RegexConfig",
    "properties": {
      "Action": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The regex description."
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The regex name."
      },
      "Pattern": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The regex pattern."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SensitiveInformationAction",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "SensitiveInformationPolicyConfig",
    "properties": {
      "PiiEntitiesConfig": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "List of entities."
      },
      "RegexesConfig": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "List of regex."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tag",
    "properties": {
      "Key": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Tag Key"
      },
      "Value": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Tag Value"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Topic",
    "properties": {
      "Definition": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Definition of topic in topic policy"
      },
      "Examples": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "List of text examples"
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name of topic in topic policy"
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TopicConfig",
    "properties": {
      "Definition": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Definition of topic in topic policy"
      },
      "Examples": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "List of text examples"
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name of topic in topic policy"
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TopicPolicyConfig",
    "properties": {
      "TopicsConfig": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 1,
        "description": "List of topic configs in topic policy."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TopicType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "WordConfig",
    "properties": {
      "Text": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The custom word text."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WordPolicyConfig",
    "properties": {
      "ManagedWordListsConfig": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "A config for the list of managed words."
      },
      "WordsConfig": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "List of custom word configs."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/65"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/74"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/76"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/81"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/71"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/84"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.Bedrock/GuardrailProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/79"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/GuardrailProperties",
    "properties": {
      "BlockedInputMessaging": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Messaging for when violations are detected in text"
      },
      "BlockedOutputsMessaging": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Messaging for when violations are detected in text"
      },
      "ContentPolicyConfig": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0
      },
      "CreatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp"
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of the guardrail or its version"
      },
      "FailureRecommendations": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 2,
        "description": "List of failure recommendations"
      },
      "GuardrailArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 18,
        "description": "Arn representation for the guardrail"
      },
      "GuardrailId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Unique id for the guardrail"
      },
      "KmsKeyArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The KMS key with which the guardrail was encrypted at rest"
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "Name of the guardrail"
      },
      "SensitiveInformationPolicyConfig": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0
      },
      "Status": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2
      },
      "StatusReasons": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 2,
        "description": "List of status reasons"
      },
      "Tags": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "List of Tags"
      },
      "TopicPolicyConfig": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0
      },
      "UpdatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Time Stamp"
      },
      "Version": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Guardrail version"
      },
      "WordPolicyConfig": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/Guardrail",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.Bedrock/Guardrail@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/99"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "KnowledgeBaseConfiguration",
    "properties": {
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      },
      "VectorKnowledgeBaseConfiguration": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KnowledgeBaseStatus",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "KnowledgeBaseStorageType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "KnowledgeBaseType",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "OpenSearchServerlessConfiguration",
    "properties": {
      "CollectionArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the OpenSearch Service vector store."
      },
      "FieldMapping": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 1
      },
      "VectorIndexName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the vector store."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OpenSearchServerlessFieldMapping",
    "properties": {
      "MetadataField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores metadata about the vector store."
      },
      "TextField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose."
      },
      "VectorField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PineconeConfiguration",
    "properties": {
      "ConnectionString": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The endpoint URL for your index management page."
      },
      "CredentialsSecretArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key."
      },
      "FieldMapping": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 1
      },
      "Namespace": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The namespace to be used to write new data to your database."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PineconeFieldMapping",
    "properties": {
      "MetadataField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores metadata about the vector store."
      },
      "TextField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RdsConfiguration",
    "properties": {
      "CredentialsSecretArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database."
      },
      "DatabaseName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of your Amazon RDS database."
      },
      "FieldMapping": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 1
      },
      "ResourceArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the vector store."
      },
      "TableName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the table in the database."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RdsFieldMapping",
    "properties": {
      "MetadataField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores metadata about the vector store."
      },
      "PrimaryKeyField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the ID for each entry."
      },
      "TextField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose."
      },
      "VectorField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RedisEnterpriseCloudConfiguration",
    "properties": {
      "CredentialsSecretArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database."
      },
      "Endpoint": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The endpoint URL of the Redis Enterprise Cloud database."
      },
      "FieldMapping": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 1
      },
      "VectorIndexName": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the vector index."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RedisEnterpriseCloudFieldMapping",
    "properties": {
      "MetadataField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores metadata about the vector store."
      },
      "TextField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose."
      },
      "VectorField": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageConfiguration",
    "properties": {
      "OpensearchServerlessConfiguration": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0
      },
      "PineconeConfiguration": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0
      },
      "RdsConfiguration": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0
      },
      "Type": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TagsMap",
    "properties": {}
  },
  {
    "$type": "ObjectType",
    "name": "VectorKnowledgeBaseConfiguration",
    "properties": {
      "EmbeddingModelArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the model used to create vector embeddings for the knowledge base."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS.Bedrock/KnowledgeBaseProperties"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/KnowledgeBaseProperties",
    "properties": {
      "CreatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The time at which the knowledge base was created."
      },
      "Description": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Description of the Resource."
      },
      "FailureReasons": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 2,
        "description": "A list of reasons that the API operation on the knowledge base failed."
      },
      "KnowledgeBaseArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The ARN of the knowledge base."
      },
      "KnowledgeBaseConfiguration": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 1
      },
      "KnowledgeBaseId": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 18,
        "description": "The unique identifier of the knowledge base."
      },
      "Name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The name of the knowledge base."
      },
      "RoleArn": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_"
      },
      "Status": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2
      },
      "StorageConfiguration": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 1
      },
      "Tags": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0
      },
      "UpdatedAt": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The time at which the knowledge base was last updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AWS.Bedrock/KnowledgeBase",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "the resource name"
      },
      "alias": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 17,
        "description": "the resource alias"
      },
      "properties": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 17,
        "description": "properties of the resource"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "AWS.Bedrock/KnowledgeBase@default",
    "scopeType": 0,
    "body": {
      "$ref": "#/119"
    },
    "flags": 0
  }
]